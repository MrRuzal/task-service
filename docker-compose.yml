version: '3'

services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${DB_USER} -d ${DB_NAME} -h localhost -p 5432"
        ]
      interval: 3s
      timeout: 3s
      retries: 5

  redis:
    image: redis:latest
    volumes:
      - redis_data:/data

  web:
    build: task_service/
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env

  worker-celery:
    build: task_service/
    command: celery -A task_service worker -l info
    depends_on:
      - db
      - redis
    env_file:
      - .env

  celery-beat:
    build: task_service/
    command: celery -A task_service beat -l info
    depends_on:
      - db
      - redis
    env_file:
      - .env

  celery-flower:
    restart: always
    image: mher/flower
    container_name: celery-flower
    command: celery flower -l INFO --persisten=True
    volumes:
      - flower_data:/data
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
    ports:
      - 5555:5555

volumes:
  postgres_data:
  redis_data:
  flower_data:
